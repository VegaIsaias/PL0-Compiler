Source Program:

const n = 1;
var i;
procedure sub;
    begin
        i := i + 1;
        if i < 3 then call sub;
    end;
begin
    i := 1;
    call sub;
end.

Lexime List:

28 2 n 9 3 1 18 29 2 i 18 30 2 sub 18 21 2 i 20 2 i 4 3 1 18 23 2 i 11 3 3 24 27 2 sub 18 22 18 21 2 i 20 3 1 18 27 2 sub 18 22 19 

Internal Symbol Representation:

constsym identsym n eqlsym numbersym 1 semicolonsym varsym identsym i semicolonsym procsym identsym sub semicolonsym beginsym identsym i becomessym identsym i plussym numbersym 1 semicolonsym ifsym identsym i lessym numbersym 3 thensym callsym identsym sub semicolonsym endsym semicolonsym beginsym identsym i becomessym numbersym 1 semicolonsym callsym identsym sub semicolonsym endsym periodsym 

No errors, program is syntatically correct.


Machine Code: 

7 0 0 14
7 0 0 2
6 0 0 4
3 0 1 4
1 1 0 1
11 0 0 1
4 0 1 4
3 0 1 4
1 1 0 3
19 0 0 1
8 0 0 13
5 0 1 1
7 0 0 13
2 0 0 0
6 0 0 5
1 0 0 1
4 0 0 4
5 0 0 1
9 0 0 3


Program Stack Trace:
Inital Values			pc	pb	sp
0	jmp	0	0	14	 14	1	0	 
RF: 0 0 0 0 0 0 0 0 
14	inc	0	0	5	 15	1	5	 0 1 0 0 0 
RF: 0 0 0 0 0 0 0 0 
15	lit	0	0	1	 16	1	5	 0 1 0 0 0 
RF: 1 0 0 0 0 0 0 0 
16	sto	0	0	4	 17	1	5	 0 1 0 0 1 
RF: 1 0 0 0 0 0 0 0 
17	cal	0	0	1	 1	6	5	 0 1 0 0 1 
RF: 1 0 0 0 0 0 0 0 
1	jmp	0	0	2	 2	6	5	 0 1 0 0 1 
RF: 1 0 0 0 0 0 0 0 
2	inc	0	0	4	 3	6	9	 0 1 0 0 1 | 0 1 1 18 
RF: 1 0 0 0 0 0 0 0 
3	lod	0	1	4	 4	6	9	 0 1 0 0 1 | 0 1 1 18 
RF: 1 0 0 0 0 0 0 0 
4	lit	1	0	1	 5	6	9	 0 1 0 0 1 | 0 1 1 18 
RF: 1 1 0 0 0 0 0 0 
5	add	0	0	1	 6	6	9	 0 1 0 0 1 | 0 1 1 18 
RF: 2 1 0 0 0 0 0 0 
6	sto	0	1	4	 7	6	9	 0 1 0 0 2 | 0 1 1 18 
RF: 2 1 0 0 0 0 0 0 
7	lod	0	1	4	 8	6	9	 0 1 0 0 2 | 0 1 1 18 
RF: 2 1 0 0 0 0 0 0 
8	lit	1	0	3	 9	6	9	 0 1 0 0 2 | 0 1 1 18 
RF: 2 3 0 0 0 0 0 0 
9	lss	0	0	1	 10	6	9	 0 1 0 0 2 | 0 1 1 18 
RF: 1 3 0 0 0 0 0 0 
10	jpc	0	0	13	 11	6	9	 0 1 0 0 2 | 0 1 1 18 
RF: 1 3 0 0 0 0 0 0 
11	cal	0	1	1	 1	10	9	 0 1 0 0 2 | 0 1 1 18 
RF: 1 3 0 0 0 0 0 0 
1	jmp	0	0	2	 2	10	9	 0 1 0 0 2 | 0 1 1 18 
RF: 1 3 0 0 0 0 0 0 
2	inc	0	0	4	 3	10	13	 0 1 0 0 2 | 0 1 1 18 | 0 1 6 12 
RF: 1 3 0 0 0 0 0 0 
3	lod	0	1	4	 4	10	13	 0 1 0 0 2 | 0 1 1 18 | 0 1 6 12 
RF: 2 3 0 0 0 0 0 0 
4	lit	1	0	1	 5	10	13	 0 1 0 0 2 | 0 1 1 18 | 0 1 6 12 
RF: 2 1 0 0 0 0 0 0 
5	add	0	0	1	 6	10	13	 0 1 0 0 2 | 0 1 1 18 | 0 1 6 12 
RF: 3 1 0 0 0 0 0 0 
6	sto	0	1	4	 7	10	13	 0 1 0 0 3 | 0 1 1 18 | 0 1 6 12 
RF: 3 1 0 0 0 0 0 0 
7	lod	0	1	4	 8	10	13	 0 1 0 0 3 | 0 1 1 18 | 0 1 6 12 
RF: 3 1 0 0 0 0 0 0 
8	lit	1	0	3	 9	10	13	 0 1 0 0 3 | 0 1 1 18 | 0 1 6 12 
RF: 3 3 0 0 0 0 0 0 
9	lss	0	0	1	 10	10	13	 0 1 0 0 3 | 0 1 1 18 | 0 1 6 12 
RF: 0 3 0 0 0 0 0 0 
10	jpc	0	0	13	 13	10	13	 0 1 0 0 3 | 0 1 1 18 | 0 1 6 12 
RF: 0 3 0 0 0 0 0 0 
13	rtn	0	0	0	 12	6	9	 0 1 0 0 3 | 0 1 1 18 
RF: 0 3 0 0 0 0 0 0 
12	jmp	0	0	13	 13	6	9	 0 1 0 0 3 | 0 1 1 18 
RF: 0 3 0 0 0 0 0 0 
13	rtn	0	0	0	 18	1	5	 0 1 0 0 3 
RF: 0 3 0 0 0 0 0 0 
18	sio	0	0	3	 0	1	0	 0
RF: 0 3 0 0 0 0 0 0 

Program Output:
0
